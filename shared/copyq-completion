# shellcheck shell=bash

list_sessions() {
    ss -l -x | sed -n '/\/\.copyq[^_]*_s /{s/.*\/\.copyq-\?\([^_]*\)_s .*/\1/;p}'
}

_copyq_completions() {
    case "$COMP_CWORD" in
        1)
            case "${COMP_WORDS[$COMP_CWORD]}" in
                --*)
                    while read -r item; do
                        COMPREPLY+=("$item")
                    done < <(compgen -W '--session --help' -- "${COMP_WORDS[$COMP_CWORD]}")
                    ;;
                -*)
                    while read -r item; do
                        COMPREPLY+=("$item")
                    done < <(compgen -W '-e -s -h' -- "${COMP_WORDS[$COMP_CWORD]}")
                    ;;
                *)
                    while read -r item; do
                        COMPREPLY+=("$item")
                    done < <(compgen -W 'show hide toggle menu exit disable enable clipboard selection paste copy count select next previous add insert remove edit separator read write action popup tab removetab renametab exporttab importtab config eval session help' -- "${COMP_WORDS[$COMP_CWORD]}")
                    ;;
            esac
            ;;
        2)
            case "${COMP_WORDS[$COMP_CWORD-1]}" in
                show)
                    while read -r item; do
                        COMPREPLY+=("$item")
                    done < <(IFS=$'\n' compgen -W "$(copyq tab)" -- "${COMP_WORDS[$COMP_CWORD]}")
                    ;;
                clipboard)
                    while read -r item; do
                        COMPREPLY+=("$item")
                    done < <(IFS=$'\n' compgen -W "$(copyq clipboard -- ?)" -- "${COMP_WORDS[$COMP_CWORD]}")
                    ;;
                selection)
                    while read -r item; do
                        COMPREPLY+=("$item")
                    done < <(IFS=$'\n' compgen -W "$(copyq selection -- ?)" -- "${COMP_WORDS[$COMP_CWORD]}")
                    ;;
                copy)
                    while read -r item; do
                        COMPREPLY+=("$item")
                    done < <(IFS=$'\n' compgen -W "$(copyq clipboardFormatsToSave)" -- "${COMP_WORDS[$COMP_CWORD]}")
                    ;;
                select)
                    # Generate numbers 1-n?
                    # Probably not very useful.
                    # COMPREPLY=(ROW)
                    ;;
                add)
                    # No reasonable way to predict user text.
                    # COMPREPLY=(TEXT)
                    ;;
                insert)
                    # Generate numbers 1-n?
                    # Probably not very useful.
                    # COMPREPLY=(ROW)
                    # No reasonable way to predict user text.
                    # COMPREPLY=(TEXT)
                    ;;
                remove)
                    # Generate numbers 1-n?
                    # Probably not very useful.
                    # COMPREPLY=(ROWS...)
                    ;;
                edit)
                    # Generate numbers 1-n?
                    # Probably not very useful.
                    # COMPREPLY=(ROW...)
                    ;;
                separator)
                    # No reasonable way to predict user separator.
                    # COMPREPLY=(SEPARATOR)
                    ;;
                read)
                    while read -r item; do
                        COMPREPLY+=("$item")
                    done < <(IFS=$'\n' compgen -W "$(copyq read -- ?)" -- "${COMP_WORDS[$COMP_CWORD]}")
                    ;;
                write)
                    while read -r item; do
                        COMPREPLY+=("$item")
                    done < <(IFS=$'\n' compgen -W "$(copyq clipboardFormatsToSave)" -- "${COMP_WORDS[$COMP_CWORD]}")
                    ;;
                action)
                    # Generate numbers 1-n?
                    # Probably not very useful.
                    # COMPREPLY=('[ROWS=0...]')
                    # Generate numbers 1-n?
                    # Probably not very useful.
                    # Can complete executables on PATH for PROGRAM.
                    # No reasonable way to predict user separator.
                    # COMPREPLY=('[ROWS=0...] [PROGRAM [SEPARATOR=\n]]')
                    ;;
                popup)
                    # No reasonable way to predict user inputs.
                    # COMPREPLY=('TITLE MESSAGE [TIME=8000]')
                    ;;
                tab)
                    while read -r item; do
                        COMPREPLY+=("$item")
                    done < <(IFS=$'\n' compgen -W "$(copyq tab)" -- "${COMP_WORDS[$COMP_CWORD]}")
                    ;;
                removetab)
                    while read -r item; do
                        COMPREPLY+=("$item")
                    done < <(IFS=$'\n' compgen -W "$(copyq tab)" -- "${COMP_WORDS[$COMP_CWORD]}")
                    ;;
                renametab)
                    while read -r item; do
                        COMPREPLY+=("$item")
                    done < <(IFS=$'\n' compgen -W "$(copyq tab)" -- "${COMP_WORDS[$COMP_CWORD]}")
                    ;;
                exporttab)
                    while read -r item; do
                        COMPREPLY+=("$item")
                    done < <(compgen -f -- "${COMP_WORDS[$COMP_CWORD]}")
                    ;;
                importtab)
                    while read -r item; do
                        COMPREPLY+=("$item")
                    done < <(compgen -f -- "${COMP_WORDS[$COMP_CWORD]}")
                    ;;
                config)
                    # Could generate allowed values for each config type but that would be a lot of work.
                    while read -r item; do
                        COMPREPLY+=("$item")
                    done < <(compgen -W "$(copyq config | grep '^[^ ]')" -- "${COMP_WORDS[$COMP_CWORD]}")
                    ;;
                eval|-e)
                    # No reasonable way to predict user inputs.
                    # COMPREPLY=('[SCRIPT] [ARGUMENTS]')
                    ;;
                session|-s|--session)
                    while read -r item; do
                        COMPREPLY+=("$item")
                    done < <(compgen -W "$(list_sessions)" -- "${COMP_WORDS[$COMP_CWORD]}")
                    ;;
                help|-h|--help)
                    while read -r item; do
                        COMPREPLY+=("$item")
                    done < <(compgen -W 'show hide toggle menu exit disable enable clipboard selection paste copy count select next previous add insert remove edit separator read write action popup tab removetab renametab exporttab importtab config eval session help' -- "${COMP_WORDS[$COMP_CWORD]}")
                    ;;
            esac
            ;;
        3)
            case "${COMP_WORDS[$COMP_CWORD-2]}" in
                tab)
                    # Which commands are valid in the tab context?

                    # while read -r item; do
                    #     COMPREPLY+=("$item")
                    # done < <(compgen -W 'show hide toggle menu exit disable enable clipboard selection paste copy count select next previous add insert remove edit separator read write action popup tab removetab renametab exporttab importtab config eval session help' -- "${COMP_WORDS[$COMP_CWORD]}")
                    ;;
            esac
            ;;
    esac
}

complete -o filenames -F _copyq_completions copyq
